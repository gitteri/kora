{
    "openrpc": "1.0.0-rc1",
    "info": {
      "version": "1.0.0",
      "title": "Kora",
      "license": {
        "name": "MIT"
      }
    },
    "servers": [
      {
        "url": "https://kora-devnet.up.railway.app"
      }
    ],
    "methods": [
      {
        "name": "estimateTransactionFee",
        "summary": "Estimate transaction fee for provided transaction",
        "tags": [
          {
            "name": "TransactionFee"
          }
        ],
        "params": [
          {
            "name": "transaction",
            "description": "Transaction to estimate transaction fee for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fee_token",
            "description": "Fee token to be used for transaction fee estimate",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "result": {
          "name": "feeEstimate",
          "description": "Fee estimate for provided transaction",
          "schema": {
              "title": "fee_in_lamports",
              "type": "integer"
          }
        },
        "errors": [
          {
            "code": 429,
            "message": "Exceeded rate limit"
          },
          {
              "code": 500,
              "message": "Internal service error."
          }
        ]
      },
      {
        "name": "getBlockhash",
        "summary": "Get latest blockhash to use",
        "tags": [
          {
            "name": "blockhash"
          }
        ],
        "params": [],
        "result": {
          "name": "blockhash",
          "description": "Fee estimate for provided transaction",
          "schema": {
            "$ref": "#/components/schemas/GetBlockhashResponse"
          }
        },
        "errors": [
          {
            "code": 429,
            "message": "Exceeded rate limit"
          },
          {
              "code": 500,
              "message": "Internal service error."
          }
        ]
      },
      {
        "name": "getConfig",
        "summary": "Get kora configuration in use",
        "tags": [],
        "params": [],
        "result": {
          "name": "config",
          "description": "Fee estimate for provided transaction",
          "schema": {
            "$ref": "#/components/schemas/Config"
          }
        },
        "errors": [
          {
            "code": 429,
            "message": "Exceeded rate limit"
          },
          {
              "code": 500,
              "message": "Internal service error."
          }
        ]
      },
      {
        "name": "getSupportedTokens",
        "summary": "Get tokens that are supported by this instance of Kora",
        "tags": [],
        "params": [],
        "result": {
          "name": "config",
          "description": "Fee estimate for provided transaction",
          "schema": {
              "type": "object",
              "required": [
                  "tokens"
              ],
              "properties": {
                  "tokens": {
                      "type": "array",
                      "items": {
                      "type": "string"
                      }
                  }
              }
          }
        },
        "errors": [
          {
            "code": 429,
            "message": "Exceeded rate limit"
          },
          {
              "code": 500,
              "message": "Internal service error."
          }
        ]
      },
      {
        "name": "signAndSendTransaction",
        "summary": "Sign and send already partially signed transaction",
        "tags": [],
        "params": [
          {
              "name": "transactionToSignAndSend",
              "required": true,
              "schema": {
                  "$ref": "#/components/schemas/SignAndSendTransactionRequest"
              }
          }
        ],
        "result": {
          "name": "signAndSendTransactionResponse",
          "description": "Transaction send result",
          "schema": {
            "$ref": "#/components/schemas/SignAndSendTransactionResponse"
          }
        },
        "errors": [
          {
            "code": 429,
            "message": "Exceeded rate limit"
          },
          {
              "code": 500,
              "message": "Internal service error."
          }
        ]
      },
      {
        "name": "signTransaction",
        "summary": "Sign a provided transaction",
        "tags": [],
        "params": [
          {
              "name": "transactionToSign",
              "required": true,
              "schema": {
                  "$ref": "#/components/schemas/SignTransactionRequest"
              }
          }
        ],
        "result": {
          "name": "signTransactionResponse",
          "description": "Transaction sign result",
          "schema": {
            "$ref": "#/components/schemas/SignTransactionResponse"
          }
        },
        "errors": [
          {
            "code": 429,
            "message": "Exceeded rate limit"
          },
          {
              "code": 500,
              "message": "Internal service error."
          }
        ]
      },
      {
        "name": "signTransactionIfPaid",
        "summary": "Sign a provided transaction if it pays the fee payer",
        "tags": [],
        "params": [
          {
              "name": "transactionToSign",
              "required": true,
              "schema": {
                  "$ref": "#/components/schemas/SignTransactionIfPaidRequest"
              }
          }
        ],
        "result": {
          "name": "signTransactionIfPaidResponse",
          "description": "Transaction sign result",
          "schema": {
            "$ref": "#/components/schemas/SignTransactionIfPaidResponse"
          }
        },
        "errors": [
          {
            "code": 429,
            "message": "Exceeded rate limit"
          },
          {
              "code": 500,
              "message": "Internal service error."
          }
        ]
      },
      {
        "name": "transferTransaction",
        "summary": "Return a partially signed transaction to transfer tokens",
        "tags": [],
        "params": [
          {
              "name": "transferTransactionRequest",
              "required": true,
              "schema": {
                  "$ref": "#/components/schemas/TransferTransactionRequest"
              }
          }
        ],
        "result": {
          "name": "TransferTransactionResponse",
          "description": "Transaction sign result",
          "schema": {
            "$ref": "#/components/schemas/TransferTransactionResponse"
          }
        },
        "errors": [
          {
            "code": 429,
            "message": "Exceeded rate limit"
          },
          {
              "code": 500,
              "message": "Internal service error."
          }
        ]
      }
    ],
    "components": {
      "schemas": {
        "GetBlockhashResponse": {
          "type": "object",
          "required": [
            "blockhash"
          ],
          "properties": {
            "blockhash": {
              "type": "string"
            }
          }
        },
        "GetConfigResponse": {
          "type": "object",
          "required": [
            "fee_payer",
            "validation_config"
          ],
          "properties": {
            "fee_payer": {
              "type": "string"
            },
            "validation_config": {
              "$ref": "#/components/schemas/ValidationConfig"
            }
          }
        },
        "GetSupportedTokensResponse": {
          "type": "object",
          "required": [
            "tokens"
          ],
          "properties": {
            "tokens": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "SignAndSendTransactionRequest": {
          "type": "object",
          "required": [
            "transaction"
          ],
          "properties": {
            "transaction": {
              "type": "string"
            }
          }
        },
        "SignAndSendTransactionResponse": {
          "type": "object",
          "required": [
            "signature",
            "signed_transaction"
          ],
          "properties": {
            "signature": {
              "type": "string"
            },
            "signed_transaction": {
              "type": "string"
            }
          }
        },
        "SignTransactionIfPaidRequest": {
          "type": "object",
          "required": [
            "transaction"
          ],
          "properties": {
            "margin": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "token_price_info": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TokenPriceInfo"
                }
              ],
              "nullable": true
            },
            "transaction": {
              "type": "string"
            }
          }
        },
        "SignTransactionIfPaidResponse": {
          "type": "object",
          "required": [
            "signature",
            "signed_transaction"
          ],
          "properties": {
            "signature": {
              "type": "string"
            },
            "signed_transaction": {
              "type": "string"
            }
          }
        },
        "SignTransactionRequest": {
          "type": "object",
          "required": [
            "transaction"
          ],
          "properties": {
            "transaction": {
              "type": "string"
            }
          }
        },
        "SignTransactionResponse": {
          "type": "object",
          "required": [
            "signature",
            "signed_transaction"
          ],
          "properties": {
            "signature": {
              "type": "string"
            },
            "signed_transaction": {
              "type": "string"
            }
          }
        },
        "TokenPriceInfo": {
          "type": "object",
          "required": [
            "price"
          ],
          "properties": {
            "price": {
              "type": "number",
              "format": "double"
            }
          }
        },
        "TransferTransactionRequest": {
          "type": "object",
          "required": [
            "amount",
            "token",
            "source",
            "destination"
          ],
          "properties": {
            "amount": {
              "type": "integer",
              "format": "int64",
              "minimum": 0
            },
            "destination": {
              "type": "string"
            },
            "source": {
              "type": "string"
            },
            "token": {
              "type": "string"
            }
          }
        },
        "TransferTransactionResponse": {
          "type": "object",
          "required": [
            "transaction",
            "message",
            "blockhash"
          ],
          "properties": {
            "blockhash": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "transaction": {
              "type": "string"
            }
          }
        },
        "Config": {
          "title": "config",
          "type": "object",
          "required": [
              "fee_payer",
              "validation_config"
          ],
          "properties": {
              "fee_payer": {
                  "type": "string"
              },
              "validation_config": {
                  "$ref": "#/components/schemas/ValidationConfig"
              }
          }
        },
        "ValidationConfig": {
          "type": "object",
          "required": [
            "max_allowed_lamports",
            "max_signatures",
            "price_source",
            "allowed_programs",
            "allowed_tokens",
            "allowed_spl_paid_tokens",
            "disallowed_accounts"
          ],
          "properties": {
            "allowed_programs": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "allowed_spl_paid_tokens": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "allowed_tokens": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "disallowed_accounts": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "max_allowed_lamports": {
              "type": "integer",
              "format": "int64",
              "minimum": 0
            },
            "max_signatures": {
              "type": "integer",
              "format": "int64",
              "minimum": 0
            },
            "price_source": {
              "type": "string",
              "enum": [
                "Jupiter",
                "Mock"
              ]
            }
          }
        }
      }
    }
  }
  